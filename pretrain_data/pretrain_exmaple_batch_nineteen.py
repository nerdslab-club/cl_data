import random

from cl_data.src.constants import PretrainTasks
from cl_data.src.random_value_generator import RandomValueGenerator
from cl_data.src.utility import Utility


def get_batch_nineteen_example_paragraph():
    a = RandomValueGenerator.generate_random_integer(1, 20)
    b = RandomValueGenerator.generate_random_integer(1, 20)
    f1 = RandomValueGenerator.generate_random_float(-10.0, 100.0)
    f2 = RandomValueGenerator.generate_random_float(-10.0, 100.0)

    value = RandomValueGenerator.generate_random_float(-1, 1, round_to=2)

    vector = RandomValueGenerator.generate_random_list(
        RandomValueGenerator.generate_random_integer(2, 10), -10, 100
    )
    lst_str = ", ".join(str(num) for num in vector)

    vector1 = RandomValueGenerator.generate_random_list(
        RandomValueGenerator.generate_random_integer(2, 10), -10, 100
    )
    lst_str1 = ", ".join(str(num) for num in vector1)

    binary_string = RandomValueGenerator.generate_random_binary_string()

    examples = [
        [
            f"Calculate {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"A_CUBED_MINUS_B_CUBED({a}, {b}) = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Determine the result of {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Find the expression {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The result of calculating {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Performing the a_cubed_minus_b_cubed operation for {a} and {b} = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"A_CUBED_MINUS_B_CUBED operation: ({a}, {b}) = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The result after calculating {a}^3 - {b}^3, what is it? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Determine {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Let's calculate {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The result of {a}^3 - {b}^3, is it true? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Calculating {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The result after calculating a_cubed_minus_b_cubed for {a} and {b} = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3, what is its value? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Let's determine the expression {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3, what is the result? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3, what does it give? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3 and provide the result = ##a_cubed_minus_b_cubed({a}, {b})",
            f"A_CUBED_MINUS_B_CUBED({a}, {b}), what does it yield? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3, ignoring order = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The result after calculating the expression {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Calculate {a}^3 - {b}^3, find the answer = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3, what does it give? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"Let's find the result after calculating the expression {a}^3 - {b}^3 = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The expression {a}^3 - {b}^3, what is the output? = ##a_cubed_minus_b_cubed({a}, {b})",
            f"The result after calculating the expression {a}^3 - {b}^3, what is it? = ##a_cubed_minus_b_cubed({a}, {b})",
        ],
        [
            f"Calculate {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"A_CUBED_PLUS_B_CUBED({a}, {b}) = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Determine the result of {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Find the expression {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The result of calculating {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Performing the a_cubed_plus_b_cubed operation for {a} and {b} = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"A_CUBED_PLUS_B_CUBED operation: ({a}, {b}) = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The result after calculating {a}^3 + {b}^3, what is it? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Determine {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Let's calculate {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The result of {a}^3 + {b}^3, is it true? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Calculating {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The result after calculating a_cubed_plus_b_cubed for {a} and {b} = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3, what is its value? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Let's determine the expression {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3, what is the result? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3, what does it give? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3 and provide the result = ##a_cubed_plus_b_cubed({a}, {b})",
            f"A_CUBED_PLUS_B_CUBED({a}, {b}), what does it yield? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3, ignoring order = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The result after calculating the expression {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Calculate {a}^3 + {b}^3, find the answer = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3, what does it give? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"Let's find the result after calculating the expression {a}^3 + {b}^3 = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The expression {a}^3 + {b}^3, what is the output? = ##a_cubed_plus_b_cubed({a}, {b})",
            f"The result after calculating the expression {a}^3 + {b}^3, what is it? = ##a_cubed_plus_b_cubed({a}, {b})",
        ],
        [
            f"Calculate ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"A_MINUS_B_TIMES_A_SQUARED_PLUS_AB_PLUS_B_SQUARED({a}, {b}) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Determine the result of ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Find the expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The result of calculating ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Performing the a_minus_b_times_a_squared_plus_ab_plus_b_squared operation for {a} and {b} = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"A_MINUS_B_TIMES_A_SQUARED_PLUS_AB_PLUS_B_SQUARED operation: ({a}, {b}) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), what is it? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Determine ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Let's calculate ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The result of ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), is it true? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Calculating ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating a_minus_b_times_a_squared_plus_ab_plus_b_squared for {a} and {b} = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), what is its value? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Let's determine the expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), what is the result? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), what does it give? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) and provide the result = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"A_MINUS_B_TIMES_A_SQUARED_PLUS_AB_PLUS_B_SQUARED({a}, {b}), what does it yield? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), ignoring order = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Calculate ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), find the answer = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), what does it give? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"Let's find the result after calculating the expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2) = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), what is the output? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression ({a} - {b}) * ({a}^2 + {a * b} + {b}^2), what is it? = ##a_minus_b_times_a_squared_plus_ab_plus_b_squared({a}, {b})",
        ],
        [
            f"Calculate ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"A_MINUS_B_WHOLE_CUBED_PLUS_3AB_TIMES_A_MINUS_B({a}, {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Determine the result of ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Find the expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The result of calculating ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Performing the a_minus_b_whole_cubed_plus_3ab_times_a_minus_b operation for {a} and {b} = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"A_MINUS_B_WHOLE_CUBED_PLUS_3AB_TIMES_A_MINUS_B operation: ({a}, {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The result after calculating ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), what is it? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Determine ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Let's calculate ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The result of ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), is it true? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Calculating ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The result after calculating a_minus_b_whole_cubed_plus_3ab_times_a_minus_b for {a} and {b} = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), what is its value? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Let's determine the expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), what is the result? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), what does it give? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) and provide the result = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"A_MINUS_B_WHOLE_CUBED_PLUS_3AB_TIMES_A_MINUS_B({a}, {b}), what does it yield? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), ignoring order = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The result after calculating the expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Calculate ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), find the answer = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), what does it give? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"Let's find the result after calculating the expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}) = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), what is the output? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
            f"The result after calculating the expression ({a} - {b})^3 + 3({a} * {b}) * ({a} - {b}), what is it? = ##a_minus_b_whole_cubed_plus_3ab_times_a_minus_b({a}, {b})",
        ],
        [
            f"Calculate ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"A_MINUS_B_WHOLE_SQUARED({a}, {b}) = ##a_minus_b_whole_squared({a}, {b})",
            f"Determine the result of ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"Find the expression ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"The result of calculating ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"Performing the a_minus_b_whole_squared operation for {a} and {b} = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"A_MINUS_B_WHOLE_SQUARED operation: ({a}, {b}) = ##a_minus_b_whole_squared({a}, {b})",
            f"The result after calculating ({a} - {b})^2, what is it? = ##a_minus_b_whole_squared({a}, {b})",
            f"Determine ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"Let's calculate ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"The result of ({a} - {b})^2, is it true? = ##a_minus_b_whole_squared({a}, {b})",
            f"Calculating ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"The result after calculating a_minus_b_whole_squared for {a} and {b} = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2, what is its value? = ##a_minus_b_whole_squared({a}, {b})",
            f"Let's determine the expression ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2, what is the result? = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2, what does it give? = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2 and provide the result = ##a_minus_b_whole_squared({a}, {b})",
            f"A_MINUS_B_WHOLE_SQUARED({a}, {b}), what does it yield? = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2, ignoring order = ##a_minus_b_whole_squared({a}, {b})",
            f"The result after calculating the expression ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"Calculate ({a} - {b})^2, find the answer = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2, what does it give? = ##a_minus_b_whole_squared({a}, {b})",
            f"Let's find the result after calculating the expression ({a} - {b})^2 = ##a_minus_b_whole_squared({a}, {b})",
            f"The expression ({a} - {b})^2, what is the output? = ##a_minus_b_whole_squared({a}, {b})",
            f"The result after calculating the expression ({a} - {b})^2, what is it? = ##a_minus_b_whole_squared({a}, {b})",
        ],
        [
            f"Calculate ({a} - {b})^2 + 4({a} * {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"A_MINUS_B_WHOLE_SQUARED_PLUS_4AB({a}, {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Determine the result of ({a} - {b})^2 + 4ab = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Find the expression ({a} - {b})^2 + 4({a} * {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The result of calculating ({a} - {b})^2 + 4ab = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Performing the a_minus_b_whole_squared_plus_4ab operation for {a} and {b} = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"A_MINUS_B_WHOLE_SQUARED_PLUS_4AB operation: ({a}, {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The result after calculating ({a} - {b})^2 + 4ab, what is it? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Determine ({a} - {b})^2 + 4ab = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Let's calculate ({a} - {b})^2 + 4ab = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The result of ({a} - {b})^2 + 4ab, is it true? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Calculating ({a} - {b})^2 + 4ab = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The result after calculating a_minus_b_whole_squared_plus_4ab for {a} and {b} = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}), what is its value? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Let's determine the expression ({a} - {b})^2 + 4({a} * {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}), what is the result? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}), what does it give? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}) and provide the result = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"A_MINUS_B_WHOLE_SQUARED_PLUS_4AB({a}, {b}), what does it yield? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}), ignoring order = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The result after calculating the expression ({a} - {b})^2 + 4({a} * {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Calculate ({a} - {b})^2 + 4({a} * {b}), find the answer = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}), what does it give? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"Let's find the result after calculating the expression ({a} - {b})^2 + 4({a} * {b}) = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The expression ({a} - {b})^2 + 4({a} * {b}), what is the output? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
            f"The result after calculating the expression ({a} - {b})^2 + 4({a} * {b}), what is it? = ##a_minus_b_whole_squared_plus_4ab({a}, {b})",
        ],
        [
            f"Calculate ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"A_PLUS_B_TIMES_A_SQUARED_MINUS_AB_PLUS_B_SQUARED({a}, {b}) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Determine the result of ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Find the expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The result of calculating ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Performing the a_plus_b_times_a_squared_minus_ab_plus_b_squared operation for {a} and {b} = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"A_PLUS_B_TIMES_A_SQUARED_MINUS_AB_PLUS_B_SQUARED operation: ({a}, {b}) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), what is it? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Determine ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Let's calculate ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The result of ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), is it true? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Calculating ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating a_plus_b_times_a_squared_minus_ab_plus_b_squared for {a} and {b} = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), what is its value? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Let's determine the expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), what is the result? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), what does it give? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) and provide the result = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"A_PLUS_B_TIMES_A_SQUARED_MINUS_AB_PLUS_B_SQUARED({a}, {b}), what does it yield? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), ignoring order = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Calculate ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), find the answer = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), what does it give? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"Let's find the result after calculating the expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2) = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), what is the output? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression ({a} + {b}) * ({a}^2 - {a * b} + {b}^2), what is it? = ##a_plus_b_times_a_squared_minus_ab_plus_b_squared({a}, {b})",
        ],
        [
            f"Calculate ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"A_PLUS_B_WHOLE_CUBED_MINUS_3AB_TIMES_A_PLUS_B({a}, {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Determine the result of ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Find the expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The result of calculating ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Performing the a_plus_b_whole_cubed_minus_3ab_times_a_plus_b operation for {a} and {b} = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"A_PLUS_B_WHOLE_CUBED_MINUS_3AB_TIMES_A_PLUS_B operation: ({a}, {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The result after calculating ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), what is it? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Determine ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Let's calculate ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The result of ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), is it true? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Calculating ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The result after calculating a_plus_b_whole_cubed_minus_3ab_times_a_plus_b for {a} and {b} = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), what is its value? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Let's determine the expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), what is the result? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), what does it give? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) and provide the result = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"A_PLUS_B_WHOLE_CUBED_MINUS_3AB_TIMES_A_PLUS_B({a}, {b}), what does it yield? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), ignoring order = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The result after calculating the expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Calculate ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), find the answer = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), what does it give? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"Let's find the result after calculating the expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}) = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), what is the output? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
            f"The result after calculating the expression ({a} + {b})^3 - 3({a} * {b}) * ({a} + {b}), what is it? = ##a_plus_b_whole_cubed_minus_3ab_times_a_plus_b({a}, {b})",
        ],
        [
            f"Calculate the square of the sum of {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"A_PLUS_B_WHOLE_SQUARE({a}, {b}) = ##a_plus_b_whole_square({a}, {b})",
            f"Determine the result of ({a} + {b})^2 = ##a_plus_b_whole_square({a}, {b})",
            f"Find the square of the sum of {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"The result of calculating ({a} + {b})^2 = ##a_plus_b_whole_square({a}, {b})",
            f"Performing the a_plus_b_whole_square operation for {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"A_PLUS_B_WHOLE_SQUARE operation: ({a}, {b}) = ##a_plus_b_whole_square({a}, {b})",
            f"The result after calculating ({a} + {b})^2, what is it? = ##a_plus_b_whole_square({a}, {b})",
            f"Determine ({a} + {b})^2 = ##a_plus_b_whole_square({a}, {b})",
            f"Let's calculate ({a} + {b})^2 = ##a_plus_b_whole_square({a}, {b})",
            f"The result of ({a} + {b})^2, is it true? = ##a_plus_b_whole_square({a}, {b})",
            f"Calculating ({a} + {b})^2 = ##a_plus_b_whole_square({a}, {b})",
            f"The result after calculating a_plus_b_whole_square for {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b}, what is its value? = ##a_plus_b_whole_square({a}, {b})",
            f"Let's determine the square of the sum of {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b}, what is the result? = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b}, what does it give? = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b} and provide the result = ##a_plus_b_whole_square({a}, {b})",
            f"A_PLUS_B_WHOLE_SQUARE({a}, {b}), what does it yield? = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b}, ignoring order = ##a_plus_b_whole_square({a}, {b})",
            f"The result after calculating the square of the sum of {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"Calculate the square of the sum of {a} and {b}, find the answer = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b}, what does it give? = ##a_plus_b_whole_square({a}, {b})",
            f"Let's find the result after calculating the square of the sum of {a} and {b} = ##a_plus_b_whole_square({a}, {b})",
            f"The square of the sum of {a} and {b}, what is the output? = ##a_plus_b_whole_square({a}, {b})",
            f"The result after calculating the square of the sum of {a} and {b}, what is it? = ##a_plus_b_whole_square({a}, {b})",
        ],
        [
            f"Calculate ({a} + {b})^2 - 4({a} * {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"A_PLUS_B_WHOLE_SQUARED_MINUS_4AB({a}, {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Determine the result of ({a} + {b})^2 - 4ab = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Find the expression ({a} + {b})^2 - 4({a} * {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The result of calculating ({a} + {b})^2 - 4ab = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Performing the a_plus_b_whole_squared_minus_4ab operation for {a} and {b} = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"A_PLUS_B_WHOLE_SQUARED_MINUS_4AB operation: ({a}, {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The result after calculating ({a} + {b})^2 - 4ab, what is it? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Determine ({a} + {b})^2 - 4ab = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Let's calculate ({a} + {b})^2 - 4ab = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The result of ({a} + {b})^2 - 4ab, is it true? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Calculating ({a} + {b})^2 - 4ab = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The result after calculating a_plus_b_whole_squared_minus_4ab for {a} and {b} = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}), what is its value? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Let's determine the expression ({a} + {b})^2 - 4({a} * {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}), what is the result? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}), what does it give? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}) and provide the result = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"A_PLUS_B_WHOLE_SQUARED_MINUS_4AB({a}, {b}), what does it yield? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}), ignoring order = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The result after calculating the expression ({a} + {b})^2 - 4({a} * {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Calculate ({a} + {b})^2 - 4({a} * {b}), find the answer = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}), what does it give? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"Let's find the result after calculating the expression ({a} + {b})^2 - 4({a} * {b}) = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The expression ({a} + {b})^2 - 4({a} * {b}), what is the output? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
            f"The result after calculating the expression ({a} + {b})^2 - 4({a} * {b}), what is it? = ##a_plus_b_whole_squared_minus_4ab({a}, {b})",
        ],
        [
            f"Calculate {a}^2 - 2({a} * {b}) + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"A_SQUARED_MINUS_2AB_PLUS_B_SQUARED({a}, {b}) = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Determine the result of {a}^2 - 2ab + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Find the expression {a}^2 - 2({a} * {b}) + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The result of calculating {a}^2 - 2ab + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Performing the a_squared_minus_2ab_plus_b_squared operation for {a} and {b} = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"A_SQUARED_MINUS_2AB_PLUS_B_SQUARED operation: ({a}, {b}) = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating {a}^2 - 2ab + {b}^2, what is it? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Determine {a}^2 - 2ab + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Let's calculate {a}^2 - 2ab + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The result of {a}^2 - 2ab + {b}^2, is it true? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Calculating {a}^2 - 2ab + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating a_squared_minus_2ab_plus_b_squared for {a} and {b} = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2, what is its value? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Let's determine the expression {a}^2 - 2({a} * {b}) + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2, what is the result? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2, what does it give? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2 and provide the result = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"A_SQUARED_MINUS_2AB_PLUS_B_SQUARED({a}, {b}), what does it yield? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2, ignoring order = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression {a}^2 - 2({a} * {b}) + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Calculate {a}^2 - 2({a} * {b}) + {b}^2, find the answer = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2, what does it give? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"Let's find the result after calculating the expression {a}^2 - 2({a} * {b}) + {b}^2 = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 - 2({a} * {b}) + {b}^2, what is the output? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression {a}^2 - 2({a} * {b}) + {b}^2, what is it? = ##a_squared_minus_2ab_plus_b_squared({a}, {b})",
        ],
        [
            f"Calculate {a}^2 + 2({a} * {b}) + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"A_SQUARED_PLUS_2AB_PLUS_B_SQUARED({a}, {b}) = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Determine the result of {a}^2 + 2ab + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Find the expression {a}^2 + 2({a} * {b}) + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The result of calculating {a}^2 + 2ab + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Performing the a_squared_plus_2ab_plus_b_squared operation for {a} and {b} = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"A_SQUARED_PLUS_2AB_PLUS_B_SQUARED operation: ({a}, {b}) = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating {a}^2 + 2ab + {b}^2, what is it? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Determine {a}^2 + 2ab + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Let's calculate {a}^2 + 2ab + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The result of {a}^2 + 2ab + {b}^2, is it true? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Calculating {a}^2 + 2ab + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating a_squared_plus_2ab_plus_b_squared for {a} and {b} = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2, what is its value? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Let's determine the expression {a}^2 + 2({a} * {b}) + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2, what is the result? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2, what does it give? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2 and provide the result = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"A_SQUARED_PLUS_2AB_PLUS_B_SQUARED({a}, {b}), what does it yield? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2, ignoring order = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression {a}^2 + 2({a} * {b}) + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Calculate {a}^2 + 2({a} * {b}) + {b}^2, find the answer = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2, what does it give? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"Let's find the result after calculating the expression {a}^2 + 2({a} * {b}) + {b}^2 = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + 2({a} * {b}) + {b}^2, what is the output? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
            f"The result after calculating the expression {a}^2 + 2({a} * {b}) + {b}^2, what is it? = ##a_squared_plus_2ab_plus_b_squared({a}, {b})",
        ],
        [
            f"Calculate {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"A_SQUARED_PLUS_B_SQUARED({a}, {b}) = ##a_squared_plus_b_squared({a}, {b})",
            f"Determine the result of {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"Find the expression {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"The result of calculating {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"Performing the a_squared_plus_b_squared operation for {a} and {b} = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"A_SQUARED_PLUS_B_SQUARED operation: ({a}, {b}) = ##a_squared_plus_b_squared({a}, {b})",
            f"The result after calculating {a}^2 + {b}^2, what is it? = ##a_squared_plus_b_squared({a}, {b})",
            f"Determine {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"Let's calculate {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"The result of {a}^2 + {b}^2, is it true? = ##a_squared_plus_b_squared({a}, {b})",
            f"Calculating {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"The result after calculating a_squared_plus_b_squared for {a} and {b} = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2, what is its value? = ##a_squared_plus_b_squared({a}, {b})",
            f"Let's determine the expression {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2, what is the result? = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2, what does it give? = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2 and provide the result = ##a_squared_plus_b_squared({a}, {b})",
            f"A_SQUARED_PLUS_B_SQUARED({a}, {b}), what does it yield? = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2, ignoring order = ##a_squared_plus_b_squared({a}, {b})",
            f"The result after calculating the expression {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"Calculate {a}^2 + {b}^2, find the answer = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2, what does it give? = ##a_squared_plus_b_squared({a}, {b})",
            f"Let's find the result after calculating the expression {a}^2 + {b}^2 = ##a_squared_plus_b_squared({a}, {b})",
            f"The expression {a}^2 + {b}^2, what is the output? = ##a_squared_plus_b_squared({a}, {b})",
            f"The result after calculating the expression {a}^2 + {b}^2, what is it? = ##a_squared_plus_b_squared({a}, {b})",
        ],
        [
            f"The absolute difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"Absolute difference({f1}, {f2}) = ##absolute_difference({f1}, {f2})",
            f"Find the absolute difference of {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"The result of absolute difference({f1}, {f2}) = ##absolute_difference({f1}, {f2})",
            f"The positive difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"Calculate the absolute difference of {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"Finding absolute difference for {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"The difference between {f1} and {f2}, ignoring direction = ##absolute_difference({f1}, {f2})",
            f"The absolute value of the difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"Absolute difference calculation: {f1}, {f2} = ##absolute_difference({f1}, {f2})",
            f"The positive difference between {f1} and {f2}, what is it? = ##absolute_difference({f1}, {f2})",
            f"The positive difference between {f1} and {f2}, what does it give? = ##absolute_difference({f1}, {f2})",
            f"Let's find the absolute difference of {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"Find the absolute difference for {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"The positive difference between {f1} and {f2}, result is = ##absolute_difference({f1}, {f2})",
            f"Calculating the absolute difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"{f1} and {f2}, what is their absolute difference? = ##absolute_difference({f1}, {f2})",
            f"The absolute value of the positive difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"The non-negative difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"Absolute difference of {f1} and {f2}, find the answer = ##absolute_difference({f1}, {f2})",
            f"Calculate absolute difference({f1}, {f2}) = ##absolute_difference({f1}, {f2})",
            f"The absolute value of the difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"Let's determine the absolute difference of {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"{f1} and {f2}, what is their positive difference? = ##absolute_difference({f1}, {f2})",
            f"Finding the absolute difference between {f1} and {f2} = ##absolute_difference({f1}, {f2})",
            f"The positive difference between {f1} and {f2}, what is its value? = ##absolute_difference({f1}, {f2})",
            f"Find the absolute difference of {f1} and {f2} and provide the result = ##absolute_difference({f1}, {f2})",
            f"Absolute difference({f1}, {f2}), what does it yield? = ##absolute_difference({f1}, {f2})",
            f"The absolute difference between {f1} and {f2}, ignoring direction = ##absolute_difference({f1}, {f2})",
        ],
        [
            f"Calculate the absolute value of the number {f1} = ##absolute({f1})",
            f"ABSOLUTE({f1}) = ##absolute({f1})",
            f"Find the absolute value for the number {f1} = ##absolute({f1})",
            f"The result of taking the absolute value of {f1} = ##absolute({f1})",
            f"Performing the absolute operation on the number {f1} = ##absolute({f1})",
            f"The absolute value of the number {f1} = ##absolute({f1})",
            f"ABSOLUTE calculation: {f1} = ##absolute({f1})",
            f"The result after taking the absolute value of {f1}, what is it? = ##absolute({f1})",
            f"The absolute value of {f1}, what does it give? = ##absolute({f1})",
            f"Let's find the absolute value of {f1} = ##absolute({f1})",
            f"Absolute value of {f1}, result is = ##absolute({f1})",
            f"Calculating the absolute value for {f1} = ##absolute({f1})",
            f"The absolute result after taking the absolute value of {f1} = ##absolute({f1})",
            f"The absolute value of the number {f1}, what is its value? = ##absolute({f1})",
            f"Let's determine the absolute value of {f1} = ##absolute({f1})",
            f"The absolute value of {f1} = ##absolute({f1})",
            f"Absolute value of {f1}, what is the result? = ##absolute({f1})",
            f"The absolute value of {f1}, what does it give? = ##absolute({f1})",
            f"Absolute value of {f1} and provide the result = ##absolute({f1})",
            f"ABSOLUTE({f1}), what does it yield? = ##absolute({f1})",
            f"The absolute value of {f1}, ignoring order = ##absolute({f1})",
            f"The result after taking the absolute value of {f1} = ##absolute({f1})",
            f"The absolute value of the number {f1}, what is it? = ##absolute({f1})",
            f"Calculate the absolute value for {f1}, find the answer = ##absolute({f1})",
            f"The absolute value of {f1}, what does it give? = ##absolute({f1})",
            f"Let's find the result after taking the absolute value of {f1} = ##absolute({f1})",
            f"Absolute value of {f1}, what is the output? = ##absolute({f1})",
            f"The absolute result after taking the absolute value of {f1}, what is it? = ##absolute({f1})",
        ],
        [
            f"Adding {a} to {b} = ##addition({a},{b})",
            f"{a} plus {b} = ##addition({a},{b})",
            f"Summing {a} and {b} = ##addition({a},{b})",
            f"The result of {a} plus {b} = ##addition({a},{b})",
            f"{a} plus {b}, what is it? = ##addition({a},{b})",
            f"Calculation: {a} + {b} = ##addition({a},{b})",
            f"{a} plus {b}, equals? = ##addition({a},{b})",
            f"Summing up {a} with {b} = ##addition({a},{b})",
            f"{a} combined with {b} = ##addition({a},{b})",
            f"The sum of {a} and {b} = ##addition({a},{b})",
            f"{a} plus {b} is? = ##addition({a},{b})",
            f"{a} plus {b} is equal to? = ##addition({a},{b})",
            f"{a} added to {b} = ##addition({a},{b})",
            f"{a} plus {b}, what does it give? = ##addition({a},{b})",
            f"{a} and {b} added together = ##addition({a},{b})",
            f"{a} + {b}, the result? = ##addition({a},{b})",
            f"{a} summed with {b} = ##addition({a},{b})",
            f"Calculate the sum of {a} and {b} = ##addition({a},{b})",
            f"The total when you add {a} to {b} = ##addition({a},{b})",
            f"{a} plus {b}, find the answer = ##addition({a},{b})",
            f"Sum: {a} + {b} = ##addition({a},{b})",
            f"Let's add {a} and {b} = ##addition({a},{b})",
            f"Find the sum of {a} and {b} = ##addition({a},{b})",
            f"{a} and {b}, their sum? = ##addition({a},{b})",
            f"{a} plus {b}, result is = ##addition({a},{b})",
            f"{a} and {b}, what will be the sum? = ##addition({a},{b})",
        ],
        [
            f"Arccosine of {value} = ##arccosine({value})",
            f"Arccos({value}) = ##arccosine({value})",
            f"The arccosine value for {value} = ##arccosine({value})",
            f"Calculate arccosine for {value} = ##arccosine({value})",
            f"Arccosine function applied to {value} = ##arccosine({value})",
            f"Arccos({value}), what is it? = ##arccosine({value})",
            f"The result of arccos({value}) = ##arccosine({value})",
            f"Find the arccosine of {value} = ##arccosine({value})",
            f"Arccosine value when input is {value} = ##arccosine({value})",
            f"Input: {value}, arccosine? = ##arccosine({value})",
            f"Arccosine of {value}, tell me = ##arccosine({value})",
            f"Arccos({value}), the answer? = ##arccosine({value})",
            f"Calculate arccos({value}) = ##arccosine({value})",
            f"The arccosine for input {value} = ##arccosine({value})",
            f"What is arccos({value})? = ##arccosine({value})",
            f"Arccosine of {value}, result? = ##arccosine({value})",
            f"Arccos({value}), find the value = ##arccosine({value})",
            f"The arccosine value for input {value} = ##arccosine({value})",
            f"Arccosine of input {value}, what does it give? = ##arccosine({value})",
            f"Find arccos({value}) = ##arccosine({value})",
            f"Arccosine function for input {value} = ##arccosine({value})",
            f"Arccosine of {value}, what is the result? = ##arccosine({value})",
        ],
        [
            f"Arcsine of {value} = ##arcsine({value})",
            f"Arcsin({value}) = ##arcsine({value})",
            f"The arcsine value for {value} = ##arcsine({value})",
            f"Calculate arcsine for {value} = ##arcsine({value})",
            f"Arcsine function applied to {value} = ##arcsine({value})",
            f"Arcsin({value}), what is it? = ##arcsine({value})",
            f"The result of arcsin({value}) = ##arcsine({value})",
            f"Find the arcsine of {value} = ##arcsine({value})",
            f"Arcsine value when input is {value} = ##arcsine({value})",
            f"Input: {value}, arcsine? = ##arcsine({value})",
            f"Arcsine of {value}, tell me = ##arcsine({value})",
            f"Arcsin({value}), the answer? = ##arcsine({value})",
            f"Calculate arcsin({value}) = ##arcsine({value})",
            f"The arcsine for input {value} = ##arcsine({value})",
            f"What is arcsin({value})? = ##arcsine({value})",
            f"Arcsine of {value}, result? = ##arcsine({value})",
            f"Arcsin({value}), find the value = ##arcsine({value})",
            f"The arcsine value for input {value} = ##arcsine({value})",
            f"Arcsine of input {value}, what does it give? = ##arcsine({value})",
            f"Find arcsin({value}) = ##arcsine({value})",
            f"Arcsine function for input {value} = ##arcsine({value})",
            f"Arcsine of {value}, what is the result? = ##arcsine({value})",
        ],
        [
            f"Arctangent of {value} = ##arctangent({value})",
            f"Arctan({value}) = ##arctangent({value})",
            f"The arctangent value for {value} = ##arctangent({value})",
            f"Calculate arctangent for {value} = ##arctangent({value})",
            f"Arctangent function applied to {value} = ##arctangent({value})",
            f"Arctan({value}), what is it? = ##arctangent({value})",
            f"The result of arctan({value}) = ##arctangent({value})",
            f"Find the arctangent of {value} = ##arctangent({value})",
            f"Arctangent value when input is {value} = ##arctangent({value})",
            f"Input: {value}, arctangent? = ##arctangent({value})",
            f"Arctangent of {value}, tell me = ##arctangent({value})",
            f"Arctan({value}), the answer? = ##arctangent({value})",
            f"Calculate arctan({value}) = ##arctangent({value})",
            f"The arctangent for input {value} = ##arctangent({value})",
            f"What is arctan({value})? = ##arctangent({value})",
            f"Arctangent of {value}, result? = ##arctangent({value})",
            f"Arctan({value}), find the value = ##arctangent({value})",
            f"The arctangent value for input {value} = ##arctangent({value})",
            f"Arctangent of input {value}, what does it give? = ##arctangent({value})",
            f"Find arctan({value}) = ##arctangent({value})",
            f"Arctangent function for input {value} = ##arctangent({value})",
            f"Arctangent of {value}, what is the result? = ##arctangent({value})",
        ],
        [
            f"Sort the list {lst_str} in ascending order = ##ascending_sort({vector})",
            f"ASCENDING_SORT({vector}) = ##ascending_sort({vector})",
            f"Arrange the elements in {lst_str} in ascending order = ##ascending_sort({vector})",
            f"The result of sorting {lst_str} in ascending order = ##ascending_sort({vector})",
            f"Perform ascending sort on the list {lst_str} = ##ascending_sort({vector})",
            f"Sorting {lst_str} in ascending order = ##ascending_sort({vector})",
            f"The sorted version of {lst_str} in ascending order = ##ascending_sort({vector})",
            f"ASCENDING_SORT calculation: {lst_str} = ##ascending_sort({vector})",
            f"The result after arranging {lst_str} in ascending order, what is it? = ##ascending_sort({vector})",
            f"The sorted order of {lst_str} in ascending fashion, what does it give? = ##ascending_sort({vector})",
            f"Let's sort {lst_str} in ascending order = ##ascending_sort({vector})",
            f"Sort the list {lst_str} in ascending order, result is = ##ascending_sort({vector})",
            f"Calculating the ascending sort for {lst_str} = ##ascending_sort({vector})",
            f"The sorted result after sorting {lst_str} in ascending order = ##ascending_sort({vector})",
            f"The arrangement of {lst_str} in ascending order, what is its value? = ##ascending_sort({vector})",
            f"Let's determine the sorted order of {lst_str} in ascending fashion = ##ascending_sort({vector})",
            f"The sorted version of {lst_str} in ascending order = ##ascending_sort({vector})",
            f"Sort {lst_str} in ascending order, what is the result? = ##ascending_sort({vector})",
            f"The arrangement of {lst_str} in ascending order, what does it give? = ##ascending_sort({vector})",
            f"Sort {lst_str} in ascending order and provide the result = ##ascending_sort({vector})",
            f"ASCENDING_SORT({vector}), what does it yield? = ##ascending_sort({vector})",
            f"The sorted order of {lst_str} in ascending fashion, ignoring order = ##ascending_sort({vector})",
            f"The result after sorting {lst_str} in ascending order = ##ascending_sort({vector})",
            f"The arrangement of {lst_str} in ascending order, what is it? = ##ascending_sort({vector})",
            f"Calculate the ascending sort for {lst_str}, find the answer = ##ascending_sort({vector})",
            f"The sorted order of {lst_str} in ascending fashion, what does it give? = ##ascending_sort({vector})",
            f"Let's find the result after sorting {lst_str} in ascending order = ##ascending_sort({vector})",
            f"Sort {lst_str} in ascending order, what is the output? = ##ascending_sort({vector})",
            f"The sorted result after sorting {lst_str} in ascending order, what is it? = ##ascending_sort({vector})",
        ],
        [
            f"Calculate the average of the numbers {lst_str} = ##average({vector})",
            f"AVERAGE({vector}) = ##average({vector})",
            f"Determine the result of the average for the numbers {lst_str} = ##average({vector})",
            f"Find the average of the numbers {lst_str} = ##average({vector})",
            f"The result of calculating the average of the numbers {lst_str} = ##average({vector})",
            f"Performing the average calculation for the numbers {lst_str} = ##average({vector})",
            f"The average of the numbers {lst_str} = ##average({vector})",
            f"AVERAGE calculation: {lst_str} = ##average({vector})",
            f"The result after calculating the average of the numbers {lst_str}, what is it? = ##average({vector})",
            f"The average of the numbers {lst_str}, what does it give? = ##average({vector})",
            f"Let's calculate the average of the numbers {lst_str} = ##average({vector})",
            f"The average of the numbers {lst_str}, result is = ##average({vector})",
            f"Calculating the average of the numbers {lst_str} = ##average({vector})",
            f"The average result after calculating average for the numbers {lst_str} = ##average({vector})",
            f"The average of the numbers {lst_str}, what is its value? = ##average({vector})",
            f"Let's determine the average of the numbers {lst_str} = ##average({vector})",
            f"The average of the numbers {lst_str} = ##average({vector})",
            f"The average of the numbers {lst_str}, what is the result? = ##average({vector})",
            f"The average of the numbers {lst_str}, what does it give? = ##average({vector})",
            f"The average of the numbers {lst_str} and provide the result = ##average({vector})",
            f"AVERAGE({vector}), what does it yield? = ##average({vector})",
            f"The average of the numbers {lst_str}, ignoring order = ##average({vector})",
            f"The result after calculating the average of the numbers {lst_str} = ##average({vector})",
            f"The average of the numbers {lst_str}, what is it? = ##average({vector})",
            f"Calculate the average of the numbers {lst_str}, find the answer = ##average({vector})",
            f"The average of the numbers {lst_str}, what does it give? = ##average({vector})",
            f"Let's find the result after calculating the average of the numbers {lst_str} = ##average({vector})",
            f"The average of the numbers {lst_str}, what is the output? = ##average({vector})",
            f"The result after calculating the average of the numbers {lst_str}, what is it? = ##average({vector})",
        ],
        [
            f"Convert the binary string '{binary_string}' to decimal = ##binary_to_decimal('{binary_string}')",
            f"BINARY_TO_DECIMAL('{binary_string}') = ##binary_to_decimal('{binary_string}')",
            f"Translate the binary representation '{binary_string}' to decimal = ##binary_to_decimal('{binary_string}')",
            f"Convert the binary string '{binary_string}' to its decimal equivalent = ##binary_to_decimal('{binary_string}')",
            f"The decimal value corresponding to the binary string '{binary_string}' = ##binary_to_decimal('{binary_string}')",
            f"Converting the binary string '{binary_string}' to decimal = ##binary_to_decimal('{binary_string}')",
            f"BINARY_TO_DECIMAL calculation: '{binary_string}' = ##binary_to_decimal('{binary_string}')",
            f"The result after converting the binary string '{binary_string}' to decimal, what is it? = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', what does it give? = ##binary_to_decimal('{binary_string}')",
            f"Let's convert the binary string '{binary_string}' to decimal = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', result is = ##binary_to_decimal('{binary_string}')",
            f"Translating the binary representation '{binary_string}' to decimal = ##binary_to_decimal('{binary_string}')",
            f"The decimal result after converting the binary string '{binary_string}' = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', what is its value? = ##binary_to_decimal('{binary_string}')",
            f"Let's determine the decimal value of the binary string '{binary_string}' = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}' = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', what is the result? = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', what does it give? = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}' and provide the result = ##binary_to_decimal('{binary_string}')",
            f"BINARY_TO_DECIMAL('{binary_string}'), what does it yield? = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', ignoring order = ##binary_to_decimal('{binary_string}')",
            f"The result after converting the binary string '{binary_string}' to decimal = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', what is it? = ##binary_to_decimal('{binary_string}')",
            f"Calculate the decimal value of the binary string '{binary_string}', find the answer = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', what does it give? = ##binary_to_decimal('{binary_string}')",
            f"Let's find the result after converting the binary string '{binary_string}' to decimal = ##binary_to_decimal('{binary_string}')",
            f"The decimal value of the binary string '{binary_string}', what is the output? = ##binary_to_decimal('{binary_string}')",
            f"The result after converting the binary string '{binary_string}' to decimal, what is it? = ##binary_to_decimal('{binary_string}')",
        ],
        [
            f"Calculate the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"CALCULATE_DOT_PRODUCT({lst_str}, {lst_str1}) = ##calculate_dot_product({vector}, {vector1})",
            f"Determine the result of the dot product for vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"Find the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The result of calculating the dot product for vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"Performing the calculate_dot_product operation for vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"CALCULATE_DOT_PRODUCT operation: {lst_str}, {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The result after calculating the dot product for vectors {lst_str} and {lst_str1}, what is it? = ##calculate_dot_product({vector}, {vector1})",
            f"Determine the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"Let's calculate the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product result of vectors {lst_str} and {lst_str1}, is it true? = ##calculate_dot_product({vector}, {vector1})",
            f"Calculating the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product result after calculating dot product for vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1}, what is its value? = ##calculate_dot_product({vector}, {vector1})",
            f"Let's determine the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1}, what is the result? = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1}, what does it give? = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1} and provide the result = ##calculate_dot_product({vector}, {vector1})",
            f"CALCULATE_DOT_PRODUCT({vector}, {vector1}), what does it yield? = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1}, ignoring order = ##calculate_dot_product({vector}, {vector1})",
            f"The result after calculating the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"Calculate the dot product of vectors {lst_str} and {lst_str1}, find the answer = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product of vectors {lst_str} and {lst_str1}, what does it give? = ##calculate_dot_product({vector}, {vector1})",
            f"Let's find the result after calculating the dot product of vectors {lst_str} and {lst_str1} = ##calculate_dot_product({vector}, {vector1})",
            f"The dot product result of vectors {lst_str} and {lst_str1}, what is the output? = ##calculate_dot_product({vector}, {vector1})",
            f"The result after calculating the dot product of vectors {lst_str} and {lst_str1}, what is it? = ##calculate_dot_product({vector}, {vector1})",
        ],
        [
            f"The ceiling of {f1} = ##ceil({f1})",
            f"CEIL({f1}) = ##ceil({f1})",
            f"Round up {f1} to the nearest whole number = ##ceil({f1})",
            f"The smallest integer greater than or equal to {f1} = ##ceil({f1})",
            f"The result of CEIL({f1}) = ##ceil({f1})",
            f"Find the ceiling of {f1} = ##ceil({f1})",
            f"Rounding up {f1} = ##ceil({f1})",
            f"{f1}, rounded up to the nearest integer = ##ceil({f1})",
            f"The smallest whole number not less than {f1} = ##ceil({f1})",
            f"CEIL calculation: {f1} = ##ceil({f1})",
            f"The smallest integer greater than or equal to {f1}, what is it? = ##ceil({f1})",
            f"The smallest integer greater than or equal to {f1}, what does it give? = ##ceil({f1})",
            f"Let's round up {f1} to the nearest whole number = ##ceil({f1})",
            f"Find the CEIL for {f1} = ##ceil({f1})",
            f"The smallest integer greater than or equal to {f1}, result is = ##ceil({f1})",
            f"Rounding {f1} up = ##ceil({f1})",
            f"{f1}, what is its ceiling? = ##ceil({f1})",
            f"The smallest whole number not less than {f1}, find the answer = ##ceil({f1})",
            f"Calculate CEIL({f1}) = ##ceil({f1})",
            f"Round {f1} up to the nearest integer = ##ceil({f1})",
            f"The smallest integer greater than or equal to {f1}, what is its value? = ##ceil({f1})",
            f"Rounding up operation for {f1} = ##ceil({f1})",
            f"Let's determine the ceiling of {f1} = ##ceil({f1})",
            f"{f1}, rounded up, what is the result? = ##ceil({f1})",
            f"The smallest whole number not less than {f1}, what is it? = ##ceil({f1})",
            f"Find the ceiling of {f1} and provide the result = ##ceil({f1})",
            f"CEIL({f1}), what does it yield? = ##ceil({f1})",
            f"Rounded up value for {f1} = ##ceil({f1})",
        ],
    ]
    return random.choice(examples)


if __name__ == "__main__":
    from masked_token_sample_generator import MaskedTokenSamplesGenerator

    masked_example = MaskedTokenSamplesGenerator.create_masked_token_batches(
        get_batch_nineteen_example_paragraph(),
    )
    sample = Utility.create_sample_from_example(
        masked_example,
        PretrainTasks.MASKED_TOKEN_PREDICTION,
    )
    print(sample)

    from next_token_sample_generator import NextTokenSamplesGenerator

    next_token_example = NextTokenSamplesGenerator.create_next_token_batches(
        get_batch_nineteen_example_paragraph(),
    )
    sample = Utility.create_sample_from_example(
        next_token_example,
        PretrainTasks.NEXT_TOKEN_PREDICTION
    )
    print(sample)
